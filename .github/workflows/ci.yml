name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '22'
        cache: 'yarn'
        registry-url: 'https://registry.npmjs.org'
        always-auth: true
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    - name: Cache node_modules
      id: cache-node-modules
      uses: actions/cache@v4
      with:
        path: |
          **/node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-

    - name: Cache ESLint dependencies
      uses: actions/cache@v4
      with: 
        path: ./packages/react-runtime/.cache/eslint
        key: ${{ runner.os }}-eslint-${{ hashFiles('yarn.lock') }}-${{ hashFiles('**/.eslintrc.cjs') }}
        restore-keys: |
          ${{ runner.os }}-eslint-

    - name: Cache Playwright browsers
      id: cache-playwright
      uses: actions/cache@v4
      with:
        path: ~/.cache/ms-playwright
        key: ${{ runner.os }}-playwright-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-playwright-

    - name: Install dependencies
      if: steps.cache-node-modules.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile

    - name: Install Playwright browsers
      if: steps.cache-playwright.outputs.cache-hit != 'true'
      run: yarn playwright:install

    - name: Lint
      run: yarn lint

    - name: Test
      run: yarn test

    - name: Build
      run: yarn build

    - name: Dry Run Semantic Release & Pack
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        npx semantic-release --dry-run

    # - name: Release with semantic-release
    #   if: github.event_name == 'push'
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    #   run: npx semantic-release
